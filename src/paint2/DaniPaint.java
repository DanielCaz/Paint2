package paint2;

import java.awt.Color;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.util.LinkedList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel Cazarez
 */
public class DaniPaint extends javax.swing.JFrame {

    private int figura;
    private final LinkedList<Point> linkedListPuntos;

    private final BufferedImage bufferedImage;

    private final LinkedList<Figura> figurasDibujadas;
    private Figura figuraSeleccionada;

    /**
     * Creates new form DaniDanPaint
     */
    public DaniPaint() {
        initComponents();
        figura = -1;
        linkedListPuntos = new LinkedList<>();
        figurasDibujadas = new LinkedList<>();
        figuraSeleccionada = null;

        bufferedImage = new BufferedImage(jLabelImagen.getWidth(), jLabelImagen.getHeight(), BufferedImage.TYPE_INT_RGB);
        Painter.llenarImagen(bufferedImage, Color.white);
        jLabelImagen.setIcon(new ImageIcon(bufferedImage));

        LinkedList<Point> puntos = new LinkedList<>();
        int padding = 10;

        /* Ícono triángulo */
        BufferedImage iconoTriangulo = new BufferedImage(jToggleButtonTriangulo.getWidth(), jToggleButtonTriangulo.getHeight(), BufferedImage.TYPE_INT_RGB);
        puntos.add(new Point(iconoTriangulo.getWidth() / 2, padding));
        puntos.add(new Point(iconoTriangulo.getWidth() - padding, iconoTriangulo.getHeight() - padding));
        puntos.add(new Point(padding, iconoTriangulo.getHeight() - padding));
        Painter.llenarImagen(iconoTriangulo, Color.white);
        Painter.dibujarPoligono(iconoTriangulo, puntos, (int) jSpinnerZ.getValue(), Color.black);
        jToggleButtonTriangulo.setIcon(new ImageIcon(iconoTriangulo));

        puntos.clear();

        /* Ícono cuadrado */
        BufferedImage iconoCuadrado = new BufferedImage(jToggleButtonCuadrado.getWidth(), jToggleButtonCuadrado.getHeight(), BufferedImage.TYPE_INT_RGB);
        puntos.add(new Point(padding, padding));
        puntos.add(new Point(iconoCuadrado.getWidth() - padding, iconoCuadrado.getHeight() - padding));
        puntos.add(1, new Point(puntos.getFirst().x, puntos.getLast().y));
        puntos.add(new Point(puntos.getLast().x, puntos.getFirst().y));
        Painter.llenarImagen(iconoCuadrado, Color.white);
        Painter.dibujarPoligono(iconoCuadrado, puntos, (int) jSpinnerZ.getValue(), Color.black);
        jToggleButtonCuadrado.setIcon(new ImageIcon(iconoCuadrado));

        puntos.clear();

        /* Ícono círculo */
        BufferedImage iconoCirculo = new BufferedImage(jToggleButtonCirculo.getWidth(), jToggleButtonCirculo.getHeight(), BufferedImage.TYPE_INT_RGB);
        Point centroCirculo = new Point(iconoCirculo.getWidth() / 2, iconoCirculo.getHeight() / 2);
        Point puntoRadio = new Point(iconoCirculo.getWidth() / 2, padding);
        int radio = (int) centroCirculo.distance(puntoRadio);
        for (int angulo = 0; angulo < 360; angulo++) {
            int x = (int) (radio * Math.cos(Math.toRadians(angulo)));
            int y = (int) (radio * Math.sin(Math.toRadians(angulo)));
            puntos.add(new Point(centroCirculo.x + x, centroCirculo.y + y));
        }
        Painter.llenarImagen(iconoCirculo, Color.white);
        Painter.dibujarPoligono(iconoCirculo, puntos, (int) jSpinnerZ.getValue(), Color.black);
        jToggleButtonCirculo.setIcon(new ImageIcon(iconoCirculo));

        puntos.clear();

        /* Ícono polígono */
        BufferedImage iconoPoligono = new BufferedImage(jToggleButtonPoligono.getWidth(), jToggleButtonPoligono.getHeight(), BufferedImage.TYPE_INT_RGB);
        puntos.add(new Point(iconoPoligono.getWidth() / 2, padding));
        puntos.add(new Point(iconoPoligono.getWidth() - padding, (int) (iconoPoligono.getHeight() * .4)));
        puntos.add(new Point((int) (iconoPoligono.getWidth() * .7), jToggleButtonPoligono.getHeight() - padding));
        puntos.add(new Point((int) (iconoPoligono.getWidth() * .3), jToggleButtonPoligono.getHeight() - padding));
        puntos.add(new Point(padding, (int) (iconoPoligono.getHeight() * .4)));
        Point centroCruz = new Point(iconoPoligono.getWidth() / 2 - 15, iconoPoligono.getHeight() / 2 - 15);
        Painter.llenarImagen(iconoPoligono, Color.white);
        Painter.dibujarPoligono(iconoPoligono, puntos, (int) jSpinnerZ.getValue(), Color.black);
        Painter.dibujarLinea(iconoPoligono, new Point(centroCruz.x - 5, centroCruz.y), new Point(centroCruz.x + 5, centroCruz.y), Color.black);
        Painter.dibujarLinea(iconoPoligono, new Point(centroCruz.x, centroCruz.y - 5), new Point(centroCruz.x, centroCruz.y + 6), Color.black);
        jToggleButtonPoligono.setIcon(new ImageIcon(iconoPoligono));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPaneVerticesPoligonos = new javax.swing.JOptionPane();
        jLabelCapturando = new javax.swing.JLabel();
        jLabelImagen = new javax.swing.JLabel();
        jPanelFiguras = new javax.swing.JPanel();
        jLabelFiguras = new javax.swing.JLabel();
        jToggleButtonTriangulo = new javax.swing.JToggleButton();
        jToggleButtonCuadrado = new javax.swing.JToggleButton();
        jToggleButtonCirculo = new javax.swing.JToggleButton();
        jToggleButtonPoligono = new javax.swing.JToggleButton();
        jSpinnerVertices = new javax.swing.JSpinner();
        jPanelHerramientas = new javax.swing.JPanel();
        jLabelHerramientas = new javax.swing.JLabel();
        jLabelTrasladar = new javax.swing.JLabel();
        jToggleButtonTraslado = new javax.swing.JToggleButton();
        jLabelRotar = new javax.swing.JLabel();
        jLabelGrados = new javax.swing.JLabel();
        jSliderGrados = new javax.swing.JSlider();
        jButtonGrados = new javax.swing.JButton();
        jLabelEscalar = new javax.swing.JLabel();
        jSpinnerEscalamiento = new javax.swing.JSpinner();
        jButtonEscalamiento = new javax.swing.JButton();
        jPanelZ = new javax.swing.JPanel();
        jLabelZ = new javax.swing.JLabel();
        jSpinnerZ = new javax.swing.JSpinner();

        jOptionPaneVerticesPoligonos.setMessage("Número de vértices");
        jOptionPaneVerticesPoligonos.setMessageType(JOptionPane.
            QUESTION_MESSAGE);
        jOptionPaneVerticesPoligonos.setWantsInput(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabelCapturando.setText(" ");

        jLabelImagen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelImagenMouseClicked(evt);
            }
        });

        jLabelFiguras.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelFiguras.setText("Figuras");

        jToggleButtonTriangulo.setToolTipText("Triángulo");
        jToggleButtonTriangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonTrianguloActionPerformed(evt);
            }
        });

        jToggleButtonCuadrado.setToolTipText("Cuadrado");
        jToggleButtonCuadrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonCuadradoActionPerformed(evt);
            }
        });

        jToggleButtonCirculo.setToolTipText("Círculo");
        jToggleButtonCirculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonCirculoActionPerformed(evt);
            }
        });

        jToggleButtonPoligono.setToolTipText("Polígono");
        jToggleButtonPoligono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonPoligonoActionPerformed(evt);
            }
        });

        jSpinnerVertices.setModel(new javax.swing.SpinnerNumberModel(3, 3, 360, 1));
        jSpinnerVertices.setEnabled(false);

        javax.swing.GroupLayout jPanelFigurasLayout = new javax.swing.GroupLayout(jPanelFiguras);
        jPanelFiguras.setLayout(jPanelFigurasLayout);
        jPanelFigurasLayout.setHorizontalGroup(
            jPanelFigurasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFigurasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFigurasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelFiguras)
                    .addGroup(jPanelFigurasLayout.createSequentialGroup()
                        .addComponent(jToggleButtonTriangulo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButtonCuadrado, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelFigurasLayout.createSequentialGroup()
                        .addComponent(jToggleButtonCirculo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButtonPoligono, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerVertices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelFigurasLayout.setVerticalGroup(
            jPanelFigurasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFigurasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFigurasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jToggleButtonCuadrado, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelFigurasLayout.createSequentialGroup()
                        .addComponent(jLabelFiguras)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButtonTriangulo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanelFigurasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButtonCirculo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButtonPoligono, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFigurasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSpinnerVertices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabelHerramientas.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelHerramientas.setText("Herramientas");

        jLabelTrasladar.setText("Trasladar");

        jToggleButtonTraslado.setText("Modo Traslado");
        jToggleButtonTraslado.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jToggleButtonTrasladoStateChanged(evt);
            }
        });

        jLabelRotar.setText("Rotar");

        jLabelGrados.setText("0°");

        jSliderGrados.setMaximum(180);
        jSliderGrados.setMinimum(-180);
        jSliderGrados.setValue(0);
        jSliderGrados.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderGradosStateChanged(evt);
            }
        });

        jButtonGrados.setText("Aplicar");
        jButtonGrados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGradosActionPerformed(evt);
            }
        });

        jLabelEscalar.setText("Escalar");

        jSpinnerEscalamiento.setModel(new javax.swing.SpinnerNumberModel(1.0d, -5.0d, 5.0d, 0.01d));

        jButtonEscalamiento.setText("Aplicar");
        jButtonEscalamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEscalamientoActionPerformed(evt);
            }
        });

        jLabelZ.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelZ.setText("Z");

        jSpinnerZ.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999, 1));

        javax.swing.GroupLayout jPanelZLayout = new javax.swing.GroupLayout(jPanelZ);
        jPanelZ.setLayout(jPanelZLayout);
        jPanelZLayout.setHorizontalGroup(
            jPanelZLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelZLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelZLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelZ)
                    .addComponent(jSpinnerZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelZLayout.setVerticalGroup(
            jPanelZLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelZLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelZ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinnerZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelHerramientasLayout = new javax.swing.GroupLayout(jPanelHerramientas);
        jPanelHerramientas.setLayout(jPanelHerramientasLayout);
        jPanelHerramientasLayout.setHorizontalGroup(
            jPanelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHerramientasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHerramientasLayout.createSequentialGroup()
                        .addGroup(jPanelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelHerramientas)
                            .addComponent(jLabelTrasladar)
                            .addComponent(jLabelRotar)
                            .addComponent(jToggleButtonTraslado)
                            .addComponent(jSliderGrados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelEscalar)
                            .addComponent(jButtonGrados)
                            .addComponent(jButtonEscalamiento))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelGrados))
                    .addComponent(jSpinnerEscalamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanelHerramientasLayout.setVerticalGroup(
            jPanelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHerramientasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelHerramientas)
                .addGap(18, 18, 18)
                .addComponent(jLabelTrasladar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButtonTraslado)
                .addGap(18, 18, 18)
                .addComponent(jLabelRotar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelHerramientasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSliderGrados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGrados))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonGrados)
                .addGap(18, 18, 18)
                .addComponent(jLabelEscalar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSpinnerEscalamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jButtonEscalamiento)
                .addGap(18, 18, 18)
                .addComponent(jPanelZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCapturando)
                        .addGap(0, 976, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelFiguras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelHerramientas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCapturando)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelFiguras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelHerramientas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonTrianguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonTrianguloActionPerformed
        jLabelCapturando.setText("Haz click en 3 puntos para el triángulo");
        figura = 1;
        jToggleButtonCirculo.setEnabled(false);
        jToggleButtonCuadrado.setEnabled(false);
        jToggleButtonPoligono.setEnabled(false);
        jToggleButtonTriangulo.setEnabled(false);
    }//GEN-LAST:event_jToggleButtonTrianguloActionPerformed

    private void jToggleButtonCuadradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonCuadradoActionPerformed
        jLabelCapturando.setText("Haz click en 2 puntos para el cuadrado");
        figura = 2;
        jToggleButtonCirculo.setEnabled(false);
        jToggleButtonCuadrado.setEnabled(false);
        jToggleButtonPoligono.setEnabled(false);
        jToggleButtonTriangulo.setEnabled(false);
    }//GEN-LAST:event_jToggleButtonCuadradoActionPerformed

    private void jToggleButtonCirculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonCirculoActionPerformed
        jLabelCapturando.setText("Haz click en 2 puntos para el círculo");
        figura = 3;
        jToggleButtonCirculo.setEnabled(false);
        jToggleButtonCuadrado.setEnabled(false);
        jToggleButtonPoligono.setEnabled(false);
        jToggleButtonTriangulo.setEnabled(false);
    }//GEN-LAST:event_jToggleButtonCirculoActionPerformed

    private void jToggleButtonPoligonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonPoligonoActionPerformed
        jLabelCapturando.setText("Ingresa el número de vértices en el spinner y haz click en el área de dibujo cuando estés listo");
        figura = 4;
        jToggleButtonCirculo.setEnabled(false);
        jToggleButtonCuadrado.setEnabled(false);
        jToggleButtonPoligono.setEnabled(false);
        jToggleButtonTriangulo.setEnabled(false);
        jSpinnerVertices.setEnabled(true);
    }//GEN-LAST:event_jToggleButtonPoligonoActionPerformed

    private void jLabelImagenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelImagenMouseClicked
        Point puntoClicked = new Point(evt.getX(), evt.getY());
        if (figura != -1) {
            switch (figura) {
                case 1:
                    linkedListPuntos.add(puntoClicked);
                    jLabelCapturando.setText("Haz click en " + (3 - linkedListPuntos.size()) + " puntos para el triángulo");
                    if (linkedListPuntos.size() < 3) {
                        return;
                    }
                    Triangulo triangulo = new Triangulo((LinkedList<Point>) linkedListPuntos.clone(), bufferedImage);
                    triangulo.dibujar((int) jSpinnerZ.getValue());
                    figurasDibujadas.add(triangulo);
                    jLabelImagen.setIcon(new ImageIcon(bufferedImage));
                    linkedListPuntos.clear();
                    figura = -1;
                    jToggleButtonCirculo.setEnabled(true);
                    jToggleButtonCuadrado.setEnabled(true);
                    jToggleButtonPoligono.setEnabled(true);
                    jToggleButtonTriangulo.setEnabled(true);
                    jLabelCapturando.setText(" ");
                    break;
                case 2:
                    linkedListPuntos.add(puntoClicked);
                    jLabelCapturando.setText("Haz click en " + (2 - linkedListPuntos.size()) + " puntos para el cuadrado");
                    if (linkedListPuntos.size() < 2) {
                        return;
                    }
                    Cuadrado cuadrado = new Cuadrado((LinkedList<Point>) linkedListPuntos.clone(), bufferedImage);
                    cuadrado.dibujar((int) jSpinnerZ.getValue());
                    figurasDibujadas.add(cuadrado);
                    jLabelImagen.setIcon(new ImageIcon(bufferedImage));
                    linkedListPuntos.clear();
                    figura = -1;
                    jToggleButtonCirculo.setEnabled(true);
                    jToggleButtonCuadrado.setEnabled(true);
                    jToggleButtonPoligono.setEnabled(true);
                    jToggleButtonTriangulo.setEnabled(true);
                    jLabelCapturando.setText(" ");
                    break;
                case 3:
                    linkedListPuntos.add(puntoClicked);
                    jLabelCapturando.setText("Haz click en " + (2 - linkedListPuntos.size()) + " puntos para el círculo");
                    if (linkedListPuntos.size() < 2) {
                        return;
                    }
                    Circulo circulo = new Circulo((LinkedList<Point>) linkedListPuntos.clone(), bufferedImage);
                    circulo.dibujar((int) jSpinnerZ.getValue());
                    figurasDibujadas.add(circulo);
                    jLabelImagen.setIcon(new ImageIcon(bufferedImage));
                    linkedListPuntos.clear();
                    figura = -1;
                    jToggleButtonCirculo.setEnabled(true);
                    jToggleButtonCuadrado.setEnabled(true);
                    jToggleButtonPoligono.setEnabled(true);
                    jToggleButtonTriangulo.setEnabled(true);
                    jLabelCapturando.setText(" ");
                    break;
                case 4:
                    jSpinnerVertices.setEnabled(false);
                    linkedListPuntos.add(puntoClicked);
                    jLabelCapturando.setText("Haz click en " + (((int) jSpinnerVertices.getValue()) - linkedListPuntos.size()) + " puntos para el polígono");
                    if (linkedListPuntos.size() < ((int) jSpinnerVertices.getValue())) {
                        return;
                    }
                    Poligono poligono = new Poligono((LinkedList<Point>) linkedListPuntos.clone(), bufferedImage);
                    poligono.dibujar((int) jSpinnerZ.getValue());
                    figurasDibujadas.add(poligono);
                    jLabelImagen.setIcon(new ImageIcon(bufferedImage));
                    linkedListPuntos.clear();
                    figura = -1;
                    jToggleButtonCirculo.setEnabled(true);
                    jToggleButtonCuadrado.setEnabled(true);
                    jToggleButtonPoligono.setEnabled(true);
                    jToggleButtonTriangulo.setEnabled(true);
                    jLabelCapturando.setText(" ");
                    break;
            }
        } else {
            if (!jToggleButtonTraslado.isSelected()) {
                for (Figura figuraDibujada : figurasDibujadas) {
                    if (figuraDibujada.dentroDe(puntoClicked)) {
                        if (figuraSeleccionada != null) {
                            figuraSeleccionada.setSeleccionada(false);
                            figuraSeleccionada.quitarCruz();
                        }
                        figuraSeleccionada = figuraDibujada;
                        figuraSeleccionada.setSeleccionada(true);
                        figuraSeleccionada.dibujarCruz();
                        jLabelImagen.setIcon(new ImageIcon(bufferedImage));
                        break;
                    }
                }
            } else {
                if (figuraSeleccionada != null) {
                    figuraSeleccionada.trasladar(puntoClicked);
                    jLabelImagen.setIcon(new ImageIcon(bufferedImage));
                }
            }
        }
    }//GEN-LAST:event_jLabelImagenMouseClicked

    private void jSliderGradosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderGradosStateChanged
        jLabelGrados.setText(String.valueOf(jSliderGrados.getValue()) + "°");
    }//GEN-LAST:event_jSliderGradosStateChanged

    private void jButtonEscalamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEscalamientoActionPerformed
        if (figuraSeleccionada != null) {
            figuraSeleccionada.escalar((double) jSpinnerEscalamiento.getValue());
            jLabelImagen.setIcon(new ImageIcon(bufferedImage));
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna figura", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEscalamientoActionPerformed

    private void jToggleButtonTrasladoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jToggleButtonTrasladoStateChanged
        if (figuraSeleccionada == null && jToggleButtonTraslado.isSelected()) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna figura", "Error", JOptionPane.WARNING_MESSAGE);
            jToggleButtonTraslado.setSelected(false);
        }
    }//GEN-LAST:event_jToggleButtonTrasladoStateChanged

    private void jButtonGradosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGradosActionPerformed
        if (figuraSeleccionada != null) {
            figuraSeleccionada.rotar(jSliderGrados.getValue());
            jLabelImagen.setIcon(new ImageIcon(bufferedImage));
        } else {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna figura", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonGradosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DaniPaint.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DaniPaint().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEscalamiento;
    private javax.swing.JButton jButtonGrados;
    private javax.swing.JLabel jLabelCapturando;
    private javax.swing.JLabel jLabelEscalar;
    private javax.swing.JLabel jLabelFiguras;
    private javax.swing.JLabel jLabelGrados;
    private javax.swing.JLabel jLabelHerramientas;
    private javax.swing.JLabel jLabelImagen;
    private javax.swing.JLabel jLabelRotar;
    private javax.swing.JLabel jLabelTrasladar;
    private javax.swing.JLabel jLabelZ;
    private javax.swing.JOptionPane jOptionPaneVerticesPoligonos;
    private javax.swing.JPanel jPanelFiguras;
    private javax.swing.JPanel jPanelHerramientas;
    private javax.swing.JPanel jPanelZ;
    private javax.swing.JSlider jSliderGrados;
    private javax.swing.JSpinner jSpinnerEscalamiento;
    private javax.swing.JSpinner jSpinnerVertices;
    private javax.swing.JSpinner jSpinnerZ;
    private javax.swing.JToggleButton jToggleButtonCirculo;
    private javax.swing.JToggleButton jToggleButtonCuadrado;
    private javax.swing.JToggleButton jToggleButtonPoligono;
    private javax.swing.JToggleButton jToggleButtonTraslado;
    private javax.swing.JToggleButton jToggleButtonTriangulo;
    // End of variables declaration//GEN-END:variables
}
